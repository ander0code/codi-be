generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider = "prisma-zod-generator"
  output   = "../src/lib/prisma/zod"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/* =========================
  ENUMS GLOBALES
========================= */
enum BoletaTipoAmbiental {
  VERDE
  AMARILLA
  ROJA
}

enum MonedaTipo {
  PEN
  USD
}

/* =========================
  1) NÚCLEO / USUARIOS
========================= */
model Usuarios {
  Id            String   @id @default(uuid()) @db.Uuid
  Nombre        String   @db.VarChar(80)
  Apellido      String   @db.VarChar(80)
  Correo        String   @unique @db.Citext
  contrasena    String   @db.Text
  CreadoEn      DateTime @default(now()) @db.Timestamptz(6)
  ActualizadoEn DateTime @updatedAt

  Preferencias  PreferenciasUsuarios?
  Boletas       Boletas[]
  PromosUsuario PromocionesUsuarios[]
}

/* Preferencias (JSONB arrays) */
model PreferenciasUsuarios {
  Id                   String   @id @default(uuid()) @db.Uuid
  UsuarioId            String   @unique @db.Uuid
  Objetivos            Json     @default("{}")
  EstilosVida          Json     @default("{}")
  PreferenciasConsumo  Json     @default("{}")
  IngredientesEvitar   Json     @default("{}")
  ActualizadoEn        DateTime @updatedAt

  Usuario Usuarios @relation(fields: [UsuarioId], references: [Id], onDelete: Cascade)
}

/* =========================
  2) TIENDAS 
========================= */
model Tiendas {
  Id        String   @id @default(uuid()) @db.Uuid
  Nombre    String   @unique
  Ruc       String?  @unique @db.Char(11)
  UrlLogo   String?  @db.Text
  Categoria String?  @db.VarChar(60)
  CreadoEn  DateTime @default(now()) @db.Timestamptz(6)

  Boletas Boletas[]
  Promos  Promociones[]
}


/* =========================
  3) BOLETAS + Productos 
========================= */
model Boletas {
  Id              String              @id @default(uuid()) @db.Uuid
  UsuarioId       String              @db.Uuid
  TiendaId        String?             @db.Uuid
  NombreTienda    String?             @db.VarChar(100)
  NumeroBoleta    String?             @db.VarChar(30)  
  DireccionTienda String?             @db.Text 
  FechaBoleta     DateTime?           @db.Date
  CodigoMoneda    MonedaTipo          @default(PEN)
  Subtotal        Decimal?            @db.Decimal(12, 2)
  Impuesto        Decimal?            @db.Decimal(12, 2)
  TasaImpuesto    Decimal?            @db.Decimal(5, 4)
  Total           Decimal?            @db.Decimal(12, 2)
  MetodoPago      String?             @db.VarChar(50)
  UrlImagen       String?             @db.Text
  TipoAmbiental   BoletaTipoAmbiental @default(AMARILLA)
  CreadoEn        DateTime            @default(now()) @db.Timestamptz(6)

  Usuario Usuarios @relation(fields: [UsuarioId], references: [Id], onDelete: Cascade)
  Tienda  Tiendas? @relation(fields: [TiendaId], references: [Id])
  Items   Productos[]

  @@index([UsuarioId, FechaBoleta(sort: Desc)])
  @@index([TiendaId])
}

model Productos {
  Id                  String   @id @default(uuid()) @db.Uuid
  BoletaId            String   @db.Uuid
  NumeroLinea         Int?     @db.Integer      
  TextoOriginal       String?  @db.Text
  NombreProducto      String?  @db.VarChar(200)
  Cantidad            Decimal? @db.Decimal(12, 3)
  Unidad              String?  @db.VarChar(15)
  PrecioUnitario      Decimal? @db.Decimal(12, 2)
  PrecioTotal         Decimal? @db.Decimal(12, 2)
  Coincidido          Boolean  @default(false)
  PuntajeCoincidencia Decimal? @db.Decimal(6, 4)
  ColeccionQdrant     String?  @db.VarChar(100)
  PuntoQdrantId       String?  @db.VarChar(100)
  MarcaId             String?  @db.Uuid
  CategoriaId         String?  @db.Uuid
  SubcategoriaId      String?  @db.Uuid
  FactorCo2PorUnidad  Decimal? @db.Decimal(12, 4)
  FactorUnidad        String?  @db.VarChar(10)
  FactorFuente        String?  @db.VarChar(150)
  EsEco               Boolean  @default(false)
  CreadoEn            DateTime @default(now()) @db.Timestamptz(6)

  Boleta       Boletas       @relation(fields: [BoletaId], references: [Id], onDelete: Cascade)
  Marca        Marcas?       @relation(fields: [MarcaId], references: [Id])
  Categoria    Categorias?   @relation(fields: [CategoriaId], references: [Id])
  Subcategoria Subcategorias? @relation(fields: [SubcategoriaId], references: [Id])

  @@index([BoletaId])
  @@index([ColeccionQdrant, PuntoQdrantId])
  @@index([MarcaId])
  @@index([CategoriaId])
  @@index([SubcategoriaId])
}
/* =========================
  CÁTALOGOS
========================= */
model Marcas {
  Id       String      @id @default(uuid()) @db.Uuid
  Nombre   String      @unique         @db.VarChar(100)
  CreadoEn DateTime    @default(now()) @db.Timestamptz(6)
  Items    Productos[]
}

model Categorias {
  Id            String          @id @default(uuid()) @db.Uuid
  Nombre        String          @unique         @db.VarChar(100)
  CreadoEn      DateTime        @default(now()) @db.Timestamptz(6)
  Subcategorias Subcategorias[]
  Items         Productos[]
}

model Subcategorias {
  Id          String   @id @default(uuid()) @db.Uuid
  Nombre      String   @db.VarChar(100)
  CategoriaId String?  @db.Uuid
  CreadoEn    DateTime @default(now()) @db.Timestamptz(6)

  Categoria Categorias? @relation(fields: [CategoriaId], references: [Id], onDelete: Cascade)
  Items     Productos[]

  @@unique([Nombre, CategoriaId])
  @@index([CategoriaId])
}

/* =========================
  4) PROMOCIONES
========================= */
model Promociones {
  Id                String    @id @default(uuid()) @db.Uuid
  Titulo            String    @db.VarChar(120)
  Descripcion       String?   @db.Text
  TipoPromocion     String    @db.VarChar(50)
  TiendaId          String?   @db.Uuid
  BoletasRequeridas Int       @default(0)
  ValidezInicio     DateTime? @db.Date
  ValidezFin        DateTime? @db.Date
  Activa            Boolean   @default(true)
  CreadoEn          DateTime  @default(now()) @db.Timestamptz(6)

  Tienda        Tiendas?              @relation(fields: [TiendaId], references: [Id])
  PromosUsuario PromocionesUsuarios[]
}


model PromocionesUsuarios {
  Id          String    @id @default(uuid()) @db.Uuid
  UsuarioId   String    @db.Uuid
  PromocionId String    @db.Uuid
  Disponible  Boolean   @default(false)
  FechaUso    DateTime?
  Detalles    Json      @default("{}")
  CreadoEn    DateTime  @default(now()) @db.Timestamptz(6)

  Usuario   Usuarios    @relation(fields: [UsuarioId], references: [Id], onDelete: Cascade)
  Promocion Promociones @relation(fields: [PromocionId], references: [Id], onDelete: Cascade)

  @@unique([UsuarioId, PromocionId])
}