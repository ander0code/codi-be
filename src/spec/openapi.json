{
  "openapi": "3.0.0",
  "info": {
    "title": "Codi API",
    "description": "API",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "support@example.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/test": {
      "get": {
        "summary": "Obtener mensaje de prueba",
        "description": "Endpoint de prueba simple",
        "tags": [
          "Test"
        ],
        "responses": {
          "200": {
            "description": "Respuesta exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Test endpoint working"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Hello World"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/test/echo": {
      "post": {
        "summary": "Echo de datos",
        "description": "Devuelve los datos enviados",
        "tags": [
          "Test"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestEchoInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Echo exitoso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Echo successful"
                    },
                    "data": {
                      "$ref": "#/components/schemas/TestEchoResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error de validación",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Registrar un nuevo usuario",
        "description": "Crea una nueva cuenta de usuario y devuelve los datos del usuario junto con un token JWT de autenticación.",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRegisterInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Registro exitoso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Usuario registrado exitosamente"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AuthResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error de validación en los datos de entrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflicto, el correo electrónico ya está registrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Iniciar sesión",
        "description": "Autentica a un usuario con su correo y contraseña. Devuelve los datos del usuario y un token JWT.",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthLoginInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inicio de sesión exitoso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Inicio de sesión exitoso"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AuthResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error de validación en los datos de entrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado, credenciales inválidas",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh-token": {
      "post": {
        "summary": "Refrescar token de acceso",
        "description": "Obtiene un nuevo par de tokens (acceso y refresco) utilizando un refresh token válido.",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRefreshTokenInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refrescado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Token refrescado exitosamente"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AuthResponse"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Refresh token inválido o expirado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/inicio/{userId}": {
      "get": {
        "summary": "Obtener datos de inicio del usuario",
        "description": "Obtiene los datos principales para la pantalla de inicio: última boleta, CO2 acumulado, puntos verdes y promociones activas.",
        "tags": [
          "Inicio"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID del usuario en formato UUID",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        ],
        "responses": {
          "200": {
            "description": "Datos de inicio obtenidos exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Datos de inicio obtenidos exitosamente"
                    },
                    "data": {
                      "$ref": "#/components/schemas/InicioResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error de validación en el ID del usuario",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Usuario no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/historial/{userId}": {
      "get": {
        "summary": "Obtener historial de compras del usuario",
        "description": "Obtiene el resumen de actividad (cantidad de boletas, CO2 total y promedio) y el listado completo de compras recientes del usuario.",
        "tags": [
          "Historial"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID del usuario en formato UUID",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        ],
        "responses": {
          "200": {
            "description": "Historial obtenido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Historial obtenido exitosamente"
                    },
                    "data": {
                      "$ref": "#/components/schemas/HistorialResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error de validación en el ID del usuario",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Usuario no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        },
        "required": [
          "success",
          "message"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        },
        "required": [
          "success",
          "message"
        ]
      },
      "TestEchoInput": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Hello World"
          }
        },
        "required": [
          "message"
        ]
      },
      "TestEchoResponse": {
        "type": "object",
        "properties": {
          "received": {
            "type": "string",
            "example": "Hello World"
          },
          "timestamp": {
            "type": "string",
            "example": "2024-01-20T10:30:00Z"
          }
        }
      },
      "AuthRegisterInput": {
        "type": "object",
        "properties": {
          "nombre": {
            "type": "string",
            "example": "Juan"
          },
          "apellido": {
            "type": "string",
            "example": "Perez"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "juan.perez@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 6,
            "example": "password123"
          }
        },
        "required": [
          "nombre",
          "apellido",
          "email",
          "password"
        ]
      },
      "AuthLoginInput": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "juan.perez@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "password123"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "AuthUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "nombre": {
            "type": "string"
          },
          "apellido": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "id",
          "nombre",
          "apellido",
          "email"
        ]
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/AuthUser"
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        },
        "required": [
          "user",
          "token",
          "refreshToken"
        ]
      },
      "AuthRefreshTokenInput": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "InicioUltimaBoleta": {
        "type": "object",
        "nullable": true,
        "properties": {
          "nombreTienda": {
            "type": "string",
            "nullable": true,
            "example": "Supermercado Líder"
          },
          "categoriaTienda": {
            "type": "string",
            "nullable": true,
            "example": "Supermercados"
          },
          "logoTienda": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "https://example.com/logos/lider.png"
          },
          "co2Total": {
            "type": "number",
            "format": "float",
            "example": 12.5,
            "description": "Total de CO2 de la boleta en kg"
          },
          "fechaBoleta": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2024-01-15T14:30:00Z"
          },
          "precioTotal": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "example": 45990.5,
            "description": "Precio total de la boleta"
          }
        }
      },
      "InicioPromocion": {
        "type": "object",
        "properties": {
          "titulo": {
            "type": "string",
            "example": "20% de descuento en productos sustentables"
          },
          "tipoPromocion": {
            "type": "string",
            "example": "Descuento"
          }
        },
        "required": [
          "titulo",
          "tipoPromocion"
        ]
      },
      "InicioResponse": {
        "type": "object",
        "properties": {
          "puntosVerdes": {
            "type": "number",
            "format": "int32",
            "example": 850,
            "description": "Puntos verdes acumulados del usuario"
          },
          "co2Acumulado": {
            "type": "number",
            "format": "float",
            "example": 125.75,
            "description": "Total de CO2 acumulado de todas las boletas del usuario en kg"
          },
          "ultimaBoleta": {
            "$ref": "#/components/schemas/InicioUltimaBoleta",
            "description": "Datos de la última boleta del usuario"
          },
          "promociones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InicioPromocion"
            },
            "maxItems": 2,
            "description": "Las 2 promociones más recientes que están activas"
          }
        },
        "required": [
          "puntosVerdes",
          "co2Acumulado",
          "ultimaBoleta",
          "promociones"
        ]
      },
      "HistorialResumenActividad": {
        "type": "object",
        "properties": {
          "cantidadBoletas": {
            "type": "integer",
            "format": "int32",
            "example": 24,
            "description": "Total de boletas del usuario"
          },
          "cantidadBoletasVerdes": {
            "type": "integer",
            "format": "int32",
            "example": 15,
            "description": "Cantidad de boletas con tipo ambiental VERDE"
          },
          "cantidadBoletasAmarillas": {
            "type": "integer",
            "format": "int32",
            "example": 7,
            "description": "Cantidad de boletas con tipo ambiental AMARILLO"
          },
          "cantidadBoletasRojas": {
            "type": "integer",
            "format": "int32",
            "example": 2,
            "description": "Cantidad de boletas con tipo ambiental ROJO"
          },
          "co2Total": {
            "type": "number",
            "format": "float",
            "example": 125.75,
            "description": "Total de CO2 acumulado de todas las boletas en kg"
          },
          "co2Promedio": {
            "type": "number",
            "format": "float",
            "example": 5.24,
            "description": "Promedio de CO2 por boleta en kg"
          }
        },
        "required": [
          "cantidadBoletas",
          "cantidadBoletasVerdes",
          "cantidadBoletasAmarillas",
          "cantidadBoletasRojas",
          "co2Total",
          "co2Promedio"
        ]
      },
      "HistorialCompraReciente": {
        "type": "object",
        "properties": {
          "fechaBoleta": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2024-01-15T14:30:00Z",
            "description": "Fecha de la compra"
          },
          "logoTienda": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "https://example.com/logos/lider.png",
            "description": "URL del logo de la tienda"
          },
          "nombreTienda": {
            "type": "string",
            "nullable": true,
            "example": "Supermercado Líder",
            "description": "Nombre de la tienda"
          },
          "tipoBoleta": {
            "type": "string",
            "enum": [
              "VERDE",
              "AMARILLO",
              "ROJO"
            ],
            "example": "VERDE",
            "description": "Tipo de boleta según impacto ambiental"
          },
          "co2Boleta": {
            "type": "number",
            "format": "float",
            "example": 4.5,
            "description": "CO2 total de esta boleta específica en kg"
          },
          "cantidadProductos": {
            "type": "integer",
            "format": "int32",
            "example": 12,
            "description": "Número de productos en la boleta"
          }
        },
        "required": [
          "fechaBoleta",
          "logoTienda",
          "nombreTienda",
          "tipoBoleta",
          "co2Boleta",
          "cantidadProductos"
        ]
      },
      "HistorialResponse": {
        "type": "object",
        "properties": {
          "resumenActividad": {
            "$ref": "#/components/schemas/HistorialResumenActividad",
            "description": "Resumen estadístico de la actividad del usuario"
          },
          "comprasRecientes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HistorialCompraReciente"
            },
            "description": "Listado completo de todas las compras del usuario ordenadas por fecha descendente"
          }
        },
        "required": [
          "resumenActividad",
          "comprasRecientes"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "Test",
      "description": "Endpoints de prueba"
    },
    {
      "name": "Auth",
      "description": "Endpoints para registro e inicio de sesión de usuarios"
    },
    {
      "name": "Inicio",
      "description": "Endpoints para obtener datos de la pantalla de inicio del usuario"
    },
    {
      "name": "Historial",
      "description": "Endpoints para obtener el historial completo de compras y estadísticas del usuario"
    }
  ]
}