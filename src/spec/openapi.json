{
  "openapi": "3.0.0",
  "info": {
    "title": "Codi API",
    "description": "API",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "support@example.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/test": {
      "get": {
        "summary": "Obtener mensaje de prueba",
        "description": "Endpoint de prueba simple",
        "tags": [
          "Test"
        ],
        "responses": {
          "200": {
            "description": "Respuesta exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Test endpoint working"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Hello World"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/test/echo": {
      "post": {
        "summary": "Echo de datos",
        "description": "Devuelve los datos enviados",
        "tags": [
          "Test"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestEchoInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Echo exitoso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Echo successful"
                    },
                    "data": {
                      "$ref": "#/components/schemas/TestEchoResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error de validación",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Registrar un nuevo usuario",
        "description": "Crea una nueva cuenta de usuario y devuelve los datos del usuario junto con un token JWT de autenticación.",
        "tags": [
          "Auth - Tradicional"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRegisterInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Registro exitoso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Usuario registrado exitosamente"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AuthResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error de validación",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Correo ya registrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Iniciar sesión",
        "description": "Autentica a un usuario con su correo y contraseña.",
        "tags": [
          "Auth - Tradicional"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthLoginInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inicio de sesión exitoso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Inicio de sesión exitoso"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AuthResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error de validación",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Credenciales inválidas",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh-token": {
      "post": {
        "summary": "Refrescar token de acceso",
        "description": "Obtiene un nuevo par de tokens utilizando un refresh token válido.",
        "tags": [
          "Auth - Tradicional"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRefreshTokenInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refrescado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Token refrescado exitosamente"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AuthResponse"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Refresh token inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/google": {
      "post": {
        "summary": "🆕 Login con Google (Aplicación Móvil)",
        "description": "**NUEVO ENDPOINT PARA MÓVIL:** Autentica usuarios de aplicaciones móviles (Android/iOS) usando el idToken de Google.\n\n## 📱 Flujo para Aplicación Móvil\n\n### Paso 1: Configurar Google Sign-In en la App\n**Android (Kotlin/Java):**\n```kotlin\nval gso = GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\n    .requestIdToken(\"TU_WEB_CLIENT_ID.apps.googleusercontent.com\")\n    .requestEmail()\n    .build()\n\nval googleSignInClient = GoogleSignIn.getClient(this, gso)\n```\n\n**iOS (Swift):**\n```swift\nGIDSignIn.sharedInstance.signIn(with: signInConfig, presenting: self) { user, error in\n    let idToken = user?.authentication.idToken\n}\n```\n\n### Paso 2: Obtener idToken de Google SDK\n```kotlin\n// Android\nval account = GoogleSignIn.getSignedInAccountFromIntent(data).result\nval idToken = account.idToken // Este es el token que debes enviar\n```\n\n### Paso 3: Enviar idToken al Backend\n```kotlin\nval response = api.loginWithGoogle(\n    GoogleLoginRequest(idToken = idToken)\n)\n```\n\n### Paso 4: Guardar Tokens JWT\n```kotlin\nval jwt = response.data.token\nval refreshToken = response.data.refreshToken\n\n// Guardar en SecureStorage\nsecurePrefs.saveToken(jwt)\nsecurePrefs.saveRefreshToken(refreshToken)\n```\n\n## ⚠️ Importante\n- **NO envíes el Client ID**: El backend ya tiene configurado su Web Client ID\n- **El idToken debe estar firmado por Google**: El backend lo verificará\n- **El idToken expira en ~1 hora**: Úsalo inmediatamente después de obtenerlo\n- **Diferencia con Web**: En web usas `/auth/signin?provider=google` (redirect), en móvil usas este endpoint (JSON)",
        "tags": [
          "Auth - OAuth Móvil"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleLoginInput"
              },
              "examples": {
                "android_example": {
                  "summary": "Ejemplo desde Android",
                  "description": "idToken obtenido del Google Sign-In SDK para Android",
                  "value": {
                    "idToken": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjU5MmU0YmZlN2RkYWFmMGNmZjRhMTJhMjk0ODFkZjJlOGQ2MTU0YzMiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJhenAiOiI4MDgyOTc5NTgyLTk0MzA5OGJvYWhhZzc5dXZxNzM3ZWY5dmJyNWc1aWE4LmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwiYXVkIjoiODA4Mjk3OTU4Mi05NDMwOThib2FoYWc3OXV2cTczN2VmOXZicjVnNWlhOC5hcHBzLmdvb2dsZXVzZXJjb250ZW50LmNvbSIsInN1YiI6IjEwNzk2NDIzNDgyMTk0NjE1MTU5MiIsImVtYWlsIjoiZXhhbXBsZUBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwibmFtZSI6IkpvaG4gRG9lIiwicGljdHVyZSI6Imh0dHBzOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS9hLS9BT2gxNEdnNl9fVGdQQV96QVlyYy1zSDFXT2h4N2V0eHN4elRlY1p0VjlaRT1zOTYtYyIsImdpdmVuX25hbWUiOiJKb2huIiwiZmFtaWx5X25hbWUiOiJEb2UiLCJsb2NhbGUiOiJlbiIsImlhdCI6MTcxNjIzOTAyMiwiZXhwIjoxNzE2MjQyNjIyfQ.example_signature"
                  }
                },
                "ios_example": {
                  "summary": "Ejemplo desde iOS",
                  "description": "idToken obtenido del Google Sign-In SDK para iOS",
                  "value": {
                    "idToken": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjU5MmU0YmZlN2RkYWFmMGNmZjRhMTJhMjk0ODFkZjJlOGQ2MTU0YzMiLCJ0eXAiOiJKV1QifQ..."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Autenticación exitosa con Google",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Inicio de sesión exitoso con Google"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AuthResponse"
                    }
                  }
                },
                "examples": {
                  "successful_mobile_login": {
                    "summary": "Login exitoso desde móvil",
                    "value": {
                      "success": true,
                      "message": "Inicio de sesión exitoso con Google",
                      "data": {
                        "user": {
                          "id": "550e8400-e29b-41d4-a716-446655440000",
                          "nombre": "Juan",
                          "apellido": "Pérez",
                          "email": "juan.perez@gmail.com",
                          "proveedorAuth": "google"
                        },
                        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU1MGU4NDAwLWUyOWItNDFkNC1hNzE2LTQ0NjY1NTQ0MDAwMCIsImVtYWlsIjoianVhbi5wZXJlekBnbWFpbC5jb20iLCJub21icmUiOiJKdWFuIiwiYXBlbGxpZG8iOiJQw6lyZXoiLCJpYXQiOjE3MTYyMzkwMjIsImV4cCI6MTcxNjg0MzgyMn0.example_signature",
                        "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU1MGU4NDAwLWUyOWItNDFkNC1hNzE2LTQ0NjY1NTQ0MDAwMCIsImVtYWlsIjoianVhbi5wZXJlekBnbWFpbC5jb20iLCJub21icmUiOiJKdWFuIiwiYXBlbGxpZG8iOiJQw6lyZXoiLCJpYXQiOjE3MTYyMzkwMjIsImV4cCI6MTcxODgzMTAyMn0.example_signature"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error de validación - idToken no proporcionado o inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "missing_token": {
                    "summary": "idToken faltante",
                    "value": {
                      "success": false,
                      "message": "El idToken de Google es requerido"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token de Google inválido o expirado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "invalid_token": {
                    "summary": "Token inválido",
                    "value": {
                      "success": false,
                      "message": "Token de Google inválido o expirado"
                    }
                  },
                  "expired_token": {
                    "summary": "Token expirado",
                    "value": {
                      "success": false,
                      "message": "Token de Google inválido o expirado"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/oauth/success": {
      "get": {
        "summary": "✅ Obtener tokens después de OAuth (Web)",
        "description": "**ENDPOINT PARA WEB:** Después de que el usuario se autentica con Google en navegador web, este endpoint devuelve un JSON con los datos del usuario, token JWT y refresh token.\n\n**Flujo Web:**\n1. Usuario hace clic en botón de Google (web)\n2. Se abre popup con `/auth/signin?provider=google`\n3. Usuario autoriza en Google\n4. Google redirige a `/auth/callback/google`\n5. Auth.js procesa y redirige a `/auth/oauth/success`\n6. Frontend hace `fetch()` a este endpoint para obtener los tokens\n\n**⚠️ Importante:** Este endpoint solo funciona inmediatamente después del flujo OAuth web. Los datos se limpian después de la primera petición.\n\n**🆚 Diferencia con `/auth/google`:**\n- `/auth/oauth/success`: Para **navegador web** (redirect flow)\n- `/auth/google`: Para **apps móviles** (POST con idToken)",
        "tags": [
          "Auth - OAuth Web"
        ],
        "responses": {
          "200": {
            "description": "Autenticación OAuth exitosa - Devuelve tokens JWT",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true,
                      "description": "Indica si la operación fue exitosa"
                    },
                    "message": {
                      "type": "string",
                      "example": "Inicio de sesión exitoso con Google",
                      "description": "Mensaje descriptivo del resultado"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AuthResponse",
                      "description": "Datos del usuario y tokens JWT"
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "data"
                  ]
                },
                "examples": {
                  "successful_web_login": {
                    "summary": "Login exitoso desde web",
                    "value": {
                      "success": true,
                      "message": "Inicio de sesión exitoso con Google",
                      "data": {
                        "user": {
                          "id": "cf1f1f52-43e5-462d-b15a-e6ccc3282082",
                          "nombre": "Max",
                          "apellido": "Ttito",
                          "email": "maxxd814@gmail.com",
                          "proveedorAuth": "google"
                        },
                        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImNmMWYxZjUyLTQzZTUtNDYyZC1iMTVhLWU2Y2NjMzI4MjA4MiIsImVtYWlsIjoibWF4eGQ4MTRAZ21haWwuY29tIiwibm9tYnJlIjoiTWF4IiwiYXBlbGxpZG8iOiJUdGl0byIsImlhdCI6MTc2MTg3MDA5NCwiZXhwIjoxNzYyNDc0ODk0fQ.example",
                        "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImNmMWYxZjUyLTQzZTUtNDYyZC1iMTVhLWU2Y2NjMzI4MjA4MiIsImVtYWlsIjoibWF4eGQ4MTRAZ21haWwuY29tIiwibm9tYnJlIjoiTWF4IiwiYXBlbGxpZG8iOiJUdGl0byIsImlhdCI6MTc2MTg3MDA5NCwiZXhwIjoxNzY0NDYyMDk0fQ.example"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Error en autenticación OAuth - No hay datos de usuario disponibles",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "success": false,
                  "message": "Error en autenticación OAuth"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signin": {
      "get": {
        "summary": "🔗 Iniciar flujo OAuth con Google (Web)",
        "description": "**SOLO PARA WEB - NO LLAMAR DESDE APPS MÓVILES:** Este endpoint redirige al usuario a la página de autorización de Google. Debe ser usado desde el navegador con `window.location.href` o `window.open()`.\n\n**Uso desde Frontend Web:**\n```javascript\nwindow.open('/auth/signin?provider=google', 'googleAuth', 'width=500,height=600');\n```\n\n**NO devuelve JSON** - solo redirecciona (HTTP 302).\n\n**📱 Para apps móviles:** Usar [`POST /auth/google`](src/modules/auth/router.ts ) en su lugar.",
        "tags": [
          "Auth - OAuth (Interno Web)"
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "google"
              ],
              "example": "google"
            },
            "description": "Proveedor OAuth a utilizar"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirección a la página de autorización de Google",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "example": "https://accounts.google.com/o/oauth2/v2/auth?..."
                },
                "description": "URL de Google OAuth"
              }
            }
          }
        }
      }
    },
    "/auth/callback/google": {
      "get": {
        "summary": "🔄 Callback OAuth (Manejado por Auth.js)",
        "description": "**NO LLAMAR MANUALMENTE:** Google redirige aquí después de que el usuario autoriza la aplicación. Auth.js procesa el código de autorización automáticamente y redirige a `/auth/oauth/success`.\n\nEste endpoint es configurado en Google Cloud Console como 'Authorized redirect URI'.",
        "tags": [
          "Auth - OAuth (Interno Web)"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Código de autorización de Google"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Token de estado CSRF"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirección a /auth/oauth/success después de procesar el código"
          },
          "401": {
            "description": "Error de autenticación - Código inválido o expirado"
          }
        }
      }
    },
    "/inicio/{userId}": {
      "get": {
        "summary": "Obtener datos de inicio del usuario",
        "description": "Obtiene los datos principales para la pantalla de inicio: última boleta, CO2 acumulado, puntos verdes y promociones activas.",
        "tags": [
          "Inicio"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID del usuario en formato UUID",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        ],
        "responses": {
          "200": {
            "description": "Datos de inicio obtenidos exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Datos de inicio obtenidos exitosamente"
                    },
                    "data": {
                      "$ref": "#/components/schemas/InicioResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error de validación en el ID del usuario",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Usuario no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/historial/{userId}": {
      "get": {
        "summary": "Obtener historial de compras del usuario",
        "description": "Obtiene el resumen de actividad (cantidad de boletas, CO2 total y promedio) y el listado completo de compras recientes del usuario.",
        "tags": [
          "Historial"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID del usuario en formato UUID",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        ],
        "responses": {
          "200": {
            "description": "Historial obtenido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Historial obtenido exitosamente"
                    },
                    "data": {
                      "$ref": "#/components/schemas/HistorialResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error de validación en el ID del usuario",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Usuario no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/perfil/{userId}": {
      "get": {
        "summary": "Obtener perfil del usuario",
        "description": "Obtiene los datos personales del usuario (nombre, apellido, correo) y sus estadísticas de compras (cantidad de recibos, recibos verdes, CO2 total y promedio).",
        "tags": [
          "Perfil"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID del usuario en formato UUID",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        ],
        "responses": {
          "200": {
            "description": "Perfil obtenido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Perfil obtenido exitosamente"
                    },
                    "data": {
                      "$ref": "#/components/schemas/PerfilResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error de validación en el ID del usuario",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Usuario no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Actualizar perfil del usuario",
        "description": "Actualiza el nombre y apellido del usuario. La fecha de actualización se registra automáticamente.",
        "tags": [
          "Perfil"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID del usuario en formato UUID",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerfilUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Perfil actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Perfil actualizado exitosamente"
                    },
                    "data": {
                      "$ref": "#/components/schemas/PerfilUpdateResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error de validación en los datos enviados",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Usuario no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        },
        "required": [
          "success",
          "message"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "Error message"
          }
        },
        "required": [
          "success",
          "message"
        ]
      },
      "TestEchoInput": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Hello World"
          }
        },
        "required": [
          "message"
        ]
      },
      "TestEchoResponse": {
        "type": "object",
        "properties": {
          "received": {
            "type": "string",
            "example": "Hello World"
          },
          "timestamp": {
            "type": "string",
            "example": "2024-01-20T10:30:00Z"
          }
        }
      },
      "AuthRegisterInput": {
        "type": "object",
        "properties": {
          "nombre": {
            "type": "string",
            "example": "Juan",
            "minLength": 3
          },
          "apellido": {
            "type": "string",
            "example": "Perez",
            "minLength": 3
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "juan.perez@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 6,
            "example": "password123"
          }
        },
        "required": [
          "nombre",
          "apellido",
          "email",
          "password"
        ]
      },
      "AuthLoginInput": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "juan.perez@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "password123"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "GoogleLoginInput": {
        "type": "object",
        "description": "Esquema para autenticación con Google desde aplicaciones móviles",
        "properties": {
          "idToken": {
            "type": "string",
            "description": "Token JWT firmado por Google obtenido del Google Sign-In SDK (Android/iOS). NO confundir con Client ID.",
            "example": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjU5MmU0YmZlN2RkYWFmMGNmZjRhMTJhMjk0ODFkZjJlOGQ2MTU0YzMiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJhenAiOiI4MDgyOTc5NTgyLTk0MzA5OGJvYWhhZzc5dXZxNzM3ZWY5dmJyNWc1aWE4LmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwiYXVkIjoiODA4Mjk3OTU4Mi05NDMwOThib2FoYWc3OXV2cTczN2VmOXZicjVnNWlhOC5hcHBzLmdvb2dsZXVzZXJjb250ZW50LmNvbSIsInN1YiI6IjEwNzk2NDIzNDgyMTk0NjE1MTU5MiIsImVtYWlsIjoiZXhhbXBsZUBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwibmFtZSI6IkpvaG4gRG9lIiwicGljdHVyZSI6Imh0dHBzOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS9hLS9BT2gxNEdnNl9fVGdQQV96QVlyYy1zSDFXT2h4N2V0eHN4elRlY1p0VjlaRT1zOTYtYyIsImdpdmVuX25hbWUiOiJKb2huIiwiZmFtaWx5X25hbWUiOiJEb2UiLCJsb2NhbGUiOiJlbiIsImlhdCI6MTcxNjIzOTAyMiwiZXhwIjoxNzE2MjQyNjIyfQ.example_signature"
          }
        },
        "required": [
          "idToken"
        ]
      },
      "AuthUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "cf1f1f52-43e5-462d-b15a-e6ccc3282082"
          },
          "nombre": {
            "type": "string",
            "example": "Max"
          },
          "apellido": {
            "type": "string",
            "example": "Ttito"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "maxxd814@gmail.com"
          },
          "proveedorAuth": {
            "type": "string",
            "example": "google",
            "description": "Proveedor de autenticación (google, email, etc.)"
          }
        },
        "required": [
          "id",
          "nombre",
          "apellido",
          "email"
        ]
      },
      "AuthResponse": {
        "type": "object",
        "description": "Respuesta estándar de autenticación - Usado para login tradicional, OAuth web y OAuth móvil",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/AuthUser"
          },
          "token": {
            "type": "string",
            "description": "JWT access token (válido por 7 días)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "refreshToken": {
            "type": "string",
            "description": "JWT refresh token (válido por 30 días)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        },
        "required": [
          "user",
          "token",
          "refreshToken"
        ]
      },
      "AuthRefreshTokenInput": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "InicioUltimaBoleta": {
        "type": "object",
        "nullable": true,
        "properties": {
          "nombreTienda": {
            "type": "string",
            "nullable": true,
            "example": "Supermercado Líder"
          },
          "categoriaTienda": {
            "type": "string",
            "nullable": true,
            "example": "Supermercados"
          },
          "logoTienda": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "https://example.com/logos/lider.png"
          },
          "co2Total": {
            "type": "number",
            "format": "float",
            "example": 12.5,
            "description": "Total de CO2 de la boleta en kg"
          },
          "fechaBoleta": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2024-01-15T14:30:00Z"
          },
          "precioTotal": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "example": 45990.5,
            "description": "Precio total de la boleta"
          }
        }
      },
      "InicioPromocion": {
        "type": "object",
        "properties": {
          "titulo": {
            "type": "string",
            "example": "20% de descuento en productos sustentables"
          },
          "tipoPromocion": {
            "type": "string",
            "example": "Descuento"
          }
        },
        "required": [
          "titulo",
          "tipoPromocion"
        ]
      },
      "InicioResponse": {
        "type": "object",
        "properties": {
          "puntosVerdes": {
            "type": "number",
            "format": "int32",
            "example": 850,
            "description": "Puntos verdes acumulados del usuario"
          },
          "co2Acumulado": {
            "type": "number",
            "format": "float",
            "example": 125.75,
            "description": "Total de CO2 acumulado de todas las boletas del usuario en kg"
          },
          "ultimaBoleta": {
            "$ref": "#/components/schemas/InicioUltimaBoleta",
            "description": "Datos de la última boleta del usuario"
          },
          "promociones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InicioPromocion"
            },
            "maxItems": 2,
            "description": "Las 2 promociones más recientes que están activas"
          }
        },
        "required": [
          "puntosVerdes",
          "co2Acumulado",
          "ultimaBoleta",
          "promociones"
        ]
      },
      "HistorialResumenActividad": {
        "type": "object",
        "properties": {
          "cantidadBoletas": {
            "type": "integer",
            "format": "int32",
            "example": 24,
            "description": "Total de boletas del usuario"
          },
          "cantidadBoletasVerdes": {
            "type": "integer",
            "format": "int32",
            "example": 15,
            "description": "Cantidad de boletas con tipo ambiental VERDE"
          },
          "cantidadBoletasAmarillas": {
            "type": "integer",
            "format": "int32",
            "example": 7,
            "description": "Cantidad de boletas con tipo ambiental AMARILLO"
          },
          "cantidadBoletasRojas": {
            "type": "integer",
            "format": "int32",
            "example": 2,
            "description": "Cantidad de boletas con tipo ambiental ROJO"
          },
          "co2Total": {
            "type": "number",
            "format": "float",
            "example": 125.75,
            "description": "Total de CO2 acumulado de todas las boletas en kg"
          },
          "co2Promedio": {
            "type": "number",
            "format": "float",
            "example": 5.24,
            "description": "Promedio de CO2 por boleta en kg"
          }
        },
        "required": [
          "cantidadBoletas",
          "cantidadBoletasVerdes",
          "cantidadBoletasAmarillas",
          "cantidadBoletasRojas",
          "co2Total",
          "co2Promedio"
        ]
      },
      "HistorialCompraReciente": {
        "type": "object",
        "properties": {
          "fechaBoleta": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2024-01-15T14:30:00Z",
            "description": "Fecha de la compra"
          },
          "logoTienda": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "example": "https://example.com/logos/lider.png",
            "description": "URL del logo de la tienda"
          },
          "nombreTienda": {
            "type": "string",
            "nullable": true,
            "example": "Supermercado Líder",
            "description": "Nombre de la tienda"
          },
          "tipoBoleta": {
            "type": "string",
            "enum": [
              "VERDE",
              "AMARILLO",
              "ROJO"
            ],
            "example": "VERDE",
            "description": "Tipo de boleta según impacto ambiental"
          },
          "co2Boleta": {
            "type": "number",
            "format": "float",
            "example": 4.5,
            "description": "CO2 total de esta boleta específica en kg"
          },
          "cantidadProductos": {
            "type": "integer",
            "format": "int32",
            "example": 12,
            "description": "Número de productos en la boleta"
          }
        },
        "required": [
          "fechaBoleta",
          "logoTienda",
          "nombreTienda",
          "tipoBoleta",
          "co2Boleta",
          "cantidadProductos"
        ]
      },
      "HistorialResponse": {
        "type": "object",
        "properties": {
          "resumenActividad": {
            "$ref": "#/components/schemas/HistorialResumenActividad",
            "description": "Resumen estadístico de la actividad del usuario"
          },
          "comprasRecientes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HistorialCompraReciente"
            },
            "description": "Listado completo de todas las compras del usuario ordenadas por fecha descendente"
          }
        },
        "required": [
          "resumenActividad",
          "comprasRecientes"
        ]
      },
      "PerfilDatosUsuario": {
        "type": "object",
        "properties": {
          "nombre": {
            "type": "string",
            "example": "Juan",
            "description": "Nombre del usuario"
          },
          "apellido": {
            "type": "string",
            "example": "Pérez",
            "description": "Apellido del usuario"
          },
          "correo": {
            "type": "string",
            "format": "email",
            "example": "juan.perez@example.com",
            "description": "Correo electrónico del usuario"
          }
        },
        "required": [
          "nombre",
          "apellido",
          "correo"
        ]
      },
      "PerfilEstadisticas": {
        "type": "object",
        "properties": {
          "cantidadRecibos": {
            "type": "integer",
            "format": "int32",
            "example": 24,
            "description": "Total de recibos del usuario"
          },
          "cantidadRecibosVerdes": {
            "type": "integer",
            "format": "int32",
            "example": 15,
            "description": "Cantidad de recibos con tipo ambiental VERDE"
          },
          "co2Total": {
            "type": "number",
            "format": "float",
            "example": 125.75,
            "description": "Total de CO2 acumulado de todos los recibos en kg"
          },
          "co2Promedio": {
            "type": "number",
            "format": "float",
            "example": 5.24,
            "description": "Promedio de CO2 por recibo en kg"
          }
        },
        "required": [
          "cantidadRecibos",
          "cantidadRecibosVerdes",
          "co2Total",
          "co2Promedio"
        ]
      },
      "PerfilResponse": {
        "type": "object",
        "properties": {
          "datosUsuario": {
            "$ref": "#/components/schemas/PerfilDatosUsuario",
            "description": "Información personal del usuario"
          },
          "estadisticas": {
            "$ref": "#/components/schemas/PerfilEstadisticas",
            "description": "Estadísticas de compras del usuario"
          }
        },
        "required": [
          "datosUsuario",
          "estadisticas"
        ]
      },
      "PerfilUpdateInput": {
        "type": "object",
        "properties": {
          "nombre": {
            "type": "string",
            "minLength": 3,
            "maxLength": 80,
            "example": "Juan Carlos",
            "description": "Nuevo nombre del usuario"
          },
          "apellido": {
            "type": "string",
            "minLength": 3,
            "maxLength": 80,
            "example": "Pérez García",
            "description": "Nuevo apellido del usuario"
          }
        },
        "required": [
          "nombre",
          "apellido"
        ]
      },
      "PerfilUpdateResponse": {
        "type": "object",
        "properties": {
          "nombre": {
            "type": "string",
            "example": "Juan Carlos",
            "description": "Nombre actualizado"
          },
          "apellido": {
            "type": "string",
            "example": "Pérez García",
            "description": "Apellido actualizado"
          },
          "actualizadoEn": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-15T14:30:00Z",
            "description": "Fecha y hora de la última actualización"
          }
        },
        "required": [
          "nombre",
          "apellido",
          "actualizadoEn"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "Test",
      "description": "Endpoints de prueba"
    },
    {
      "name": "Auth - Tradicional",
      "description": "Autenticación con email y contraseña. Devuelve tokens JWT."
    },
    {
      "name": "Auth - OAuth Móvil",
      "description": "🆕 **NUEVO:** `POST /auth/google` - Endpoint para apps móviles (Android/iOS). Recibe idToken de Google SDK y devuelve JWT."
    },
    {
      "name": "Auth - OAuth Web",
      "description": "🌐 `GET /auth/oauth/success` - Endpoint para navegador web. Devuelve JSON con tokens después de redirect flow."
    },
    {
      "name": "Auth - OAuth (Interno Web)",
      "description": "⚙️ Endpoints manejados automáticamente por Auth.js para web. NO llamar directamente - solo redireccionan."
    },
    {
      "name": "Inicio",
      "description": "Endpoints para obtener datos de la pantalla de inicio del usuario"
    },
    {
      "name": "Historial",
      "description": "Endpoints para obtener el historial completo de compras y estadísticas del usuario"
    },
    {
      "name": "Perfil",
      "description": "Endpoints para gestionar el perfil del usuario y visualizar sus estadísticas"
    }
  ]
}