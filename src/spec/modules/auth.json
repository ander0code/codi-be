{
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Registrar un nuevo usuario",
        "description": "Crea una nueva cuenta de usuario y devuelve los datos del usuario junto con un token JWT de autenticaci√≥n.",
        "tags": ["Auth - Tradicional"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AuthRegisterInput" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Registro exitoso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Usuario registrado exitosamente" },
                    "data": { "$ref": "#/components/schemas/AuthResponse" }
                  }
                }
              }
            }
          },
          "400": { 
            "description": "Error de validaci√≥n", 
            "content": { 
              "application/json": { 
                "schema": { "$ref": "#/components/schemas/ErrorResponse" } 
              } 
            } 
          },
          "409": { 
            "description": "Correo ya registrado", 
            "content": { 
              "application/json": { 
                "schema": { "$ref": "#/components/schemas/ErrorResponse" } 
              } 
            } 
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Iniciar sesi√≥n",
        "description": "Autentica a un usuario con su correo y contrase√±a.",
        "tags": ["Auth - Tradicional"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AuthLoginInput" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inicio de sesi√≥n exitoso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Inicio de sesi√≥n exitoso" },
                    "data": { "$ref": "#/components/schemas/AuthResponse" }
                  }
                }
              }
            }
          },
          "400": { 
            "description": "Error de validaci√≥n", 
            "content": { 
              "application/json": { 
                "schema": { "$ref": "#/components/schemas/ErrorResponse" } 
              } 
            } 
          },
          "401": { 
            "description": "Credenciales inv√°lidas", 
            "content": { 
              "application/json": { 
                "schema": { "$ref": "#/components/schemas/ErrorResponse" } 
              } 
            } 
          }
        }
      }
    },
    "/auth/refresh-token": {
      "post": {
        "summary": "Refrescar token de acceso",
        "description": "Obtiene un nuevo par de tokens utilizando un refresh token v√°lido.",
        "tags": ["Auth - Tradicional"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AuthRefreshTokenInput" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refrescado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Token refrescado exitosamente" },
                    "data": { "$ref": "#/components/schemas/AuthResponse" }
                  }
                }
              }
            }
          },
          "401": { 
            "description": "Refresh token inv√°lido", 
            "content": { 
              "application/json": { 
                "schema": { "$ref": "#/components/schemas/ErrorResponse" } 
              } 
            } 
          }
        }
      }
    },
    "/auth/oauth/success": {
      "get": {
        "summary": "‚úÖ Obtener tokens despu√©s de OAuth",
        "description": "**ENDPOINT PRINCIPAL PARA FRONTEND:** Despu√©s de que el usuario se autentica con Google, este endpoint devuelve un JSON con los datos del usuario, token JWT y refresh token. Es el √∫nico endpoint OAuth que devuelve JSON.\n\n**Flujo:**\n1. Usuario hace clic en bot√≥n de Google\n2. Se abre popup con `/auth/signin?provider=google`\n3. Usuario autoriza en Google\n4. Google redirige a `/auth/callback/google`\n5. Auth.js procesa y redirige a `/auth/oauth/success`\n6. Frontend hace `fetch()` a este endpoint para obtener los tokens\n\n**Importante:** Este endpoint solo funciona inmediatamente despu√©s del flujo OAuth. Los datos se limpian despu√©s de la primera petici√≥n.",
        "tags": ["Auth - OAuth"],
        "responses": {
          "200": {
            "description": "Autenticaci√≥n OAuth exitosa - Devuelve tokens JWT",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { 
                      "type": "boolean", 
                      "example": true,
                      "description": "Indica si la operaci√≥n fue exitosa"
                    },
                    "message": { 
                      "type": "string", 
                      "example": "Inicio de sesi√≥n exitoso con Google",
                      "description": "Mensaje descriptivo del resultado"
                    },
                    "data": { 
                      "$ref": "#/components/schemas/AuthResponse",
                      "description": "Datos del usuario y tokens JWT"
                    }
                  },
                  "required": ["success", "message", "data"]
                },
                "examples": {
                  "successful_login": {
                    "summary": "Login exitoso con Google",
                    "value": {
                      "success": true,
                      "message": "Inicio de sesi√≥n exitoso con Google",
                      "data": {
                        "user": {
                          "id": "cf1f1f52-43e5-462d-b15a-e6ccc3282082",
                          "nombre": "Max",
                          "apellido": "Ttito",
                          "email": "maxxd814@gmail.com",
                          "proveedorAuth": "google o email"
                        },
                        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImNmMWYxZjUyLTQzZTUtNDYyZC1iMTVhLWU2Y2NjMzI4MjA4MiIsImVtYWlsIjoibWF4eGQ4MTRAZ21haWwuY29tIiwibm9tYnJlIjoiTWF4IiwiYXBlbGxpZG8iOiJUdGl0byIsImlhdCI6MTc2MTg3MDA5NCwiZXhwIjoxNzYyNDc0ODk0fQ.example",
                        "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImNmMWYxZjUyLTQzZTUtNDYyZC1iMTVhLWU2Y2NjMzI4MjA4MiIsImVtYWlsIjoibWF4eGQ4MTRAZ21haWwuY29tIiwibm9tYnJlIjoiTWF4IiwiYXBlbGxpZG8iOiJUdGl0byIsImlhdCI6MTc2MTg3MDA5NCwiZXhwIjoxNzY0NDYyMDk0fQ.example"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Error en autenticaci√≥n OAuth - No hay datos de usuario disponibles",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "example": {
                  "success": false,
                  "message": "Error en autenticaci√≥n OAuth"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/auth/signin/google": {
      "get": {
        "summary": "üîó Iniciar flujo OAuth con Google",
        "description": "**NO LLAMAR DESDE C√ìDIGO:** Este endpoint redirige al usuario a la p√°gina de autorizaci√≥n de Google. Debe ser usado desde el navegador con `window.location.href` o `window.open()`.\n\n**Uso desde Frontend:**\n```javascript\nwindow.open('/auth/signin?provider=google', 'googleAuth', 'width=500,height=600');\n```\n\n**NO devuelve JSON** - solo redirecciona (HTTP 302).",
        "tags": ["Auth - OAuth (Interno)"],
        "parameters": [
          {
            "name": "provider",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "enum": ["google"], "example": "google" },
            "description": "Proveedor OAuth a utilizar"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirecci√≥n a la p√°gina de autorizaci√≥n de Google",
            "headers": {
              "Location": { 
                "schema": { 
                  "type": "string", 
                  "example": "https://accounts.google.com/o/oauth2/v2/auth?..." 
                },
                "description": "URL de Google OAuth"
              }
            }
          }
        }
      }
    },
    "/auth/callback/google": {
      "get": {
        "summary": "üîÑ Callback OAuth (Manejado por Auth.js)",
        "description": "**NO LLAMAR MANUALMENTE:** Google redirige aqu√≠ despu√©s de que el usuario autoriza la aplicaci√≥n. Auth.js procesa el c√≥digo de autorizaci√≥n autom√°ticamente y redirige a `/auth/oauth/success`.\n\nEste endpoint es configurado en Google Cloud Console como 'Authorized redirect URI'.",
        "tags": ["Auth - OAuth (Interno)"],
        "parameters": [
          { 
            "name": "code", 
            "in": "query", 
            "required": true, 
            "schema": { "type": "string" },
            "description": "C√≥digo de autorizaci√≥n de Google"
          },
          { 
            "name": "state", 
            "in": "query", 
            "required": false, 
            "schema": { "type": "string" },
            "description": "Token de estado CSRF"
          }
        ],
        "responses": {
          "302": { 
            "description": "Redirecci√≥n a /auth/oauth/success despu√©s de procesar el c√≥digo"
          },
          "401": { 
            "description": "Error de autenticaci√≥n - C√≥digo inv√°lido o expirado"
          }
        }
      }
    }
  },
  "schemas": {
    "AuthRegisterInput": {
      "type": "object",
      "properties": {
        "nombre": { "type": "string", "example": "Juan", "minLength": 3 },
        "apellido": { "type": "string", "example": "Perez", "minLength": 3 },
        "email": { "type": "string", "format": "email", "example": "juan.perez@example.com" },
        "password": { "type": "string", "format": "password", "minLength": 6, "example": "password123" }
        
      },
      "required": ["nombre", "apellido", "email", "password"]
    },
    "AuthLoginInput": {
      "type": "object",
      "properties": {
        "email": { "type": "string", "format": "email", "example": "juan.perez@example.com" },
        "password": { "type": "string", "format": "password", "example": "password123" }
      },
      "required": ["email", "password"]
    },
    "AuthUser": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "format": "uuid", "example": "cf1f1f52-43e5-462d-b15a-e6ccc3282082" },
        "nombre": { "type": "string", "example": "Max" },
        "apellido": { "type": "string", "example": "Ttito" },
        "email": { "type": "string", "format": "email", "example": "maxxd814@gmail.com" },
        "proveedorAuth": {
          "type": "string",
          "example": "google",
          "description": "Proveedor de autenticaci√≥n (google, email, etc.)"
        }
      },
      "required": ["id", "nombre", "apellido", "email"]
    },
    "AuthResponse": {
      "type": "object",
      "description": "Respuesta est√°ndar de autenticaci√≥n - Usado tanto para login tradicional como OAuth",
      "properties": {
        "user": { "$ref": "#/components/schemas/AuthUser" },
        "token": { 
          "type": "string", 
          "description": "JWT access token (v√°lido por 7 d√≠as)",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..." 
        },
        "refreshToken": { 
          "type": "string", 
          "description": "JWT refresh token (v√°lido por 30 d√≠as)",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..." 
        }
      },
      "required": ["user", "token", "refreshToken"]
    },
    "AuthRefreshTokenInput": {
      "type": "object",
      "properties": {
        "refreshToken": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..." }
      },
      "required": ["refreshToken"]
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "success": { "type": "boolean", "example": false },
        "message": { "type": "string", "example": "Error message" }
      },
      "required": ["success", "message"]
    }
  },
  "tags": [
    {
      "name": "Auth - Tradicional",
      "description": "Autenticaci√≥n con email y contrase√±a. Devuelve tokens JWT."
    },
    {
      "name": "Auth - OAuth",
      "description": "üéØ **ENDPOINT PRINCIPAL:** `/auth/oauth/success` - √önico endpoint que devuelve JSON con tokens despu√©s de Google OAuth"
    },
    {
      "name": "Auth - OAuth (Interno)",
      "description": "‚öôÔ∏è Endpoints manejados autom√°ticamente por Auth.js. NO llamar directamente desde c√≥digo - solo redireccionan."
    }
  ]
}